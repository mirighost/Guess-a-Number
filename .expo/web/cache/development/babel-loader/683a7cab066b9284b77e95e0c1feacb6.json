{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Miri\\\\guess-number\\\\screens\\\\GameScreen.js\",\n    _this = this;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Ionicons } from '@expo/vector-icons';\nimport NumberContainer from \"../components/NumberContainer\";\nimport Card from \"../components/Card\";\nimport MainButton from \"../components/MainButton\";\nimport BodyText from \"../components/BodyText\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nvar renderListItem = function renderListItem(listLength, itemData) {\n  return React.createElement(View, {\n    style: styles.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 2\n    }\n  }, React.createElement(BodyText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, \"#\", listLength - itemData.index), React.createElement(BodyText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, itemData.item));\n};\n\nvar GameScreen = function GameScreen(props) {\n  var userChoice = props.userChoice,\n      onGameOver = props.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userChoice);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState([initialGuess.toString()]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pastGuesses = _useState4[0],\n      setPastGuesses = _useState4[1];\n\n  var currentLow = useRef(1);\n  var currentHigh = useRef(100);\n  useEffect(function () {\n    if (currentGuess === userChoice) {\n      onGameOver(pastGuesses.length);\n    }\n  }, [currentGuess, userChoice, onGameOver]);\n\n  var nextGuessHandler = function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < userChoice || direction === 'greater' && currentGuess > userChoice) {\n      Alert.alert(\"Don't lie!\", 'You know that this is wrong...', [{\n        text: 'Sorry',\n        style: 'cancel'\n      }]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess + 1;\n    }\n\n    var nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n    setCurrentGuess(nextNumber);\n    setPastGuesses(function (curPastGuesses) {\n      return [nextNumber.toString()].concat(_toConsumableArray(curPastGuesses));\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, \"Opponent's Guess\"), React.createElement(NumberContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, currentGuess), React.createElement(Card, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, React.createElement(MainButton, {\n    onPress: nextGuessHandler.bind(_this, 'lower'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-remove\",\n    size: 24,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  })), React.createElement(MainButton, {\n    onPress: nextGuessHandler.bind(_this, 'greater'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-add\",\n    size: 24,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }))), React.createElement(View, {\n    style: styles.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }, React.createElement(FlatList, {\n    contentContainerStyle: styles.list,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: pastGuesses,\n    renderItem: renderListItem.bind(_this, pastGuesses.length),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 20,\n    width: 300,\n    maxWidth: '80%'\n  },\n  listContainer: {\n    flex: 1,\n    width: '80%'\n  },\n  list: {\n    flexGrow: 1,\n    justifyContent: 'flex-end'\n  },\n  listItem: {\n    borderRightWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%'\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["C:/Users/Miri/guess-number/screens/GameScreen.js"],"names":["React","useState","useRef","useEffect","Ionicons","NumberContainer","Card","MainButton","BodyText","generateRandomBetween","min","max","exclude","Math","ceil","floor","rndNum","random","renderListItem","listLength","itemData","styles","listItem","index","item","GameScreen","props","userChoice","onGameOver","initialGuess","currentGuess","setCurrentGuess","toString","pastGuesses","setPastGuesses","currentLow","currentHigh","length","nextGuessHandler","direction","Alert","alert","text","style","current","nextNumber","curPastGuesses","screen","buttonContainer","bind","listContainer","list","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","width","maxWidth","flexGrow","borderRightWidth","borderLeftWidth","borderColor","borderWidth","borderRadius","marginVertical","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n\tView,\r\n\tText,\r\n\tStyleSheet,\r\n\tAlert,\r\n\tScrollView,\r\n\tFlatList,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nimport NumberContainer from '../components/NumberContainer';\r\nimport Card from '../components/Card';\r\nimport MainButton from '../components/MainButton';\r\nimport BodyText from '../components/BodyText';\r\n\r\nconst generateRandomBetween = (min, max, exclude) => {\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\tconst rndNum = Math.floor(Math.random() * (max - min)) + min;\r\n\tif (rndNum === exclude) {\r\n\t\treturn generateRandomBetween(min, max, exclude);\r\n\t} else {\r\n\t\treturn rndNum;\r\n\t}\r\n};\r\n\r\nconst renderListItem = (listLength, itemData) => (\r\n\t<View style={styles.listItem}>\r\n\t\t<BodyText>#{listLength - itemData.index}</BodyText>\r\n\t\t<BodyText>{itemData.item}</BodyText>\r\n\t</View>\r\n);\r\n\r\nconst GameScreen = (props) => {\r\n\tconst { userChoice, onGameOver } = props;\r\n\r\n\tconst initialGuess = generateRandomBetween(1, 100, userChoice);\r\n\r\n\tconst [currentGuess, setCurrentGuess] = useState(initialGuess);\r\n\tconst [pastGuesses, setPastGuesses] = useState([initialGuess.toString()]);\r\n\tconst currentLow = useRef(1);\r\n\tconst currentHigh = useRef(100);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentGuess === userChoice) {\r\n\t\t\tonGameOver(pastGuesses.length);\r\n\t\t}\r\n\t}, [currentGuess, userChoice, onGameOver]);\r\n\r\n\tconst nextGuessHandler = (direction) => {\r\n\t\tif (\r\n\t\t\t(direction === 'lower' && currentGuess < userChoice) ||\r\n\t\t\t(direction === 'greater' && currentGuess > userChoice)\r\n\t\t) {\r\n\t\t\tAlert.alert(\"Don't lie!\", 'You know that this is wrong...', [\r\n\t\t\t\t{ text: 'Sorry', style: 'cancel' },\r\n\t\t\t]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (direction === 'lower') {\r\n\t\t\tcurrentHigh.current = currentGuess;\r\n\t\t} else {\r\n\t\t\tcurrentLow.current = currentGuess + 1;\r\n\t\t}\r\n\r\n\t\tconst nextNumber = generateRandomBetween(\r\n\t\t\tcurrentLow.current,\r\n\t\t\tcurrentHigh.current,\r\n\t\t\tcurrentGuess,\r\n\t\t);\r\n\r\n\t\tsetCurrentGuess(nextNumber);\r\n\t\t// setRounds((curRounds) => curRounds + 1);\r\n\t\tsetPastGuesses((curPastGuesses) => [\r\n\t\t\tnextNumber.toString(),\r\n\t\t\t...curPastGuesses,\r\n\t\t]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.screen}>\r\n\t\t\t<Text>Opponent's Guess</Text>\r\n\t\t\t<NumberContainer>{currentGuess}</NumberContainer>\r\n\t\t\t<Card style={styles.buttonContainer}>\r\n\t\t\t\t<MainButton onPress={nextGuessHandler.bind(this, 'lower')}>\r\n\t\t\t\t\t<Ionicons name='md-remove' size={24} color='white' />\r\n\t\t\t\t</MainButton>\r\n\t\t\t\t<MainButton onPress={nextGuessHandler.bind(this, 'greater')}>\r\n\t\t\t\t\t<Ionicons name='md-add' size={24} color='white' />\r\n\t\t\t\t</MainButton>\r\n\t\t\t</Card>\r\n\r\n\t\t\t{/* list of guesses */}\r\n\t\t\t<View style={styles.listContainer}>\r\n\t\t\t\t{/* <ScrollView contentContainerStyle={styles.list}>\r\n\t\t\t\t\t{pastGuesses.map((guess, index) =>\r\n\t\t\t\t\t\trenderListItem(guess, pastGuesses.length - index),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ScrollView> */}\r\n\r\n\t\t\t\t<FlatList\r\n\t\t\t\t\tcontentContainerStyle={styles.list}\r\n\t\t\t\t\tkeyExtractor={(item) => item}\r\n\t\t\t\t\tdata={pastGuesses}\r\n\t\t\t\t\trenderItem={renderListItem.bind(this, pastGuesses.length)}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tscreen: {\r\n\t\tflex: 1,\r\n\t\tpadding: 10,\r\n\t\talignItems: 'center',\r\n\t},\r\n\tbuttonContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tmarginTop: 20,\r\n\t\twidth: 300,\r\n\t\tmaxWidth: '80%',\r\n\t},\r\n\tlistContainer: {\r\n\t\tflex: 1,\r\n\t\twidth: '80%',\r\n\t},\r\n\tlist: {\r\n\t\tflexGrow: 1,\r\n\t\t// alignItems: 'center',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n\tlistItem: {\r\n\t\tborderRightWidth: 0,\r\n\t\tborderLeftWidth: 0,\r\n\t\tborderColor: '#ccc',\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 15,\r\n\t\tmarginVertical: 10,\r\n\t\tbackgroundColor: 'white',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-between',\r\n\t\twidth: '100%',\r\n\t},\r\n});\r\n\r\nexport default GameScreen;\r\n"]},"metadata":{},"sourceType":"module"}