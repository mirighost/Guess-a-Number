{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Miri\\\\guess-number\\\\screens\\\\StartGameScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport BodyText from \"../components/BodyText\";\nimport TitleText from \"../components/TitleText\";\nimport Colors from \"../constants/colors\";\nimport MainButton from \"../components/MainButton\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumer = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g), '');\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue('');\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number!', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumer(chosenNumber);\n    setEnteredValue('');\n    Keyboard.dismiss();\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Card, {\n      style: styles.summaryContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, React.createElement(BodyText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, \"You selected\"), React.createElement(NumberContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, selectedNumber), React.createElement(MainButton, {\n      onPress: function onPress() {\n        return props.onStartGame(selectedNumber);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, \"START GAME\"));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }\n  }, React.createElement(TitleText, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"Start a New Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(BodyText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }\n  })))), confirmedOutput));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  },\n  button: {\n    width: 100\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: 'center'\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["C:/Users/Miri/guess-number/screens/StartGameScreen.js"],"names":["React","useState","Card","Input","NumberContainer","BodyText","TitleText","Colors","MainButton","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumer","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","Keyboard","dismiss","confirmedOutput","styles","summaryContainer","onStartGame","screen","title","inputContainer","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n\tView,\r\n\tStyleSheet,\r\n\tButton,\r\n\tTouchableWithoutFeedback,\r\n\tKeyboard,\r\n\tAlert,\r\n} from 'react-native';\r\n\r\nimport Card from '../components/Card';\r\nimport Input from '../components/Input';\r\nimport NumberContainer from '../components/NumberContainer';\r\nimport BodyText from '../components/BodyText';\r\nimport TitleText from '../components/TitleText';\r\nimport Colors from '../constants/colors';\r\nimport MainButton from '../components/MainButton';\r\n\r\nconst StartGameScreen = (props) => {\r\n\tconst [enteredValue, setEnteredValue] = useState('');\r\n\tconst [confirmed, setConfirmed] = useState(false);\r\n\tconst [selectedNumber, setSelectedNumer] = useState();\r\n\r\n\tconst numberInputHandler = (inputText) => {\r\n\t\tsetEnteredValue(inputText.replace(/[^0-9]/g), '');\r\n\t};\r\n\r\n\t// resetting input\r\n\tconst resetInputHandler = () => {\r\n\t\tsetEnteredValue('');\r\n\t\tsetConfirmed(false);\r\n\t};\r\n\r\n\t// confirming number\r\n\tconst confirmInputHandler = () => {\r\n\t\tconst chosenNumber = parseInt(enteredValue);\r\n\t\tif (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\r\n\t\t\tAlert.alert(\r\n\t\t\t\t'Invalid number!',\r\n\t\t\t\t'Number has to be a number between 1 and 99.',\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Okay',\r\n\t\t\t\t\t\tstyle: 'destructive',\r\n\t\t\t\t\t\tonPress: resetInputHandler,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetConfirmed(true);\r\n\t\tsetSelectedNumer(chosenNumber);\r\n\t\tsetEnteredValue('');\r\n\t\tKeyboard.dismiss();\r\n\t};\r\n\r\n\tlet confirmedOutput;\r\n\r\n\tif (confirmed) {\r\n\t\tconfirmedOutput = (\r\n\t\t\t<Card style={styles.summaryContainer}>\r\n\t\t\t\t<BodyText>You selected</BodyText>\r\n\t\t\t\t<NumberContainer>{selectedNumber}</NumberContainer>\r\n\t\t\t\t<MainButton onPress={() => props.onStartGame(selectedNumber)}>\r\n\t\t\t\t\tSTART GAME\r\n\t\t\t\t</MainButton>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TouchableWithoutFeedback\r\n\t\t\tonPress={() => {\r\n\t\t\t\tKeyboard.dismiss();\r\n\t\t\t}}>\r\n\t\t\t<View style={styles.screen}>\r\n\t\t\t\t<TitleText style={styles.title}>Start a New Game!</TitleText>\r\n\t\t\t\t<Card style={styles.inputContainer}>\r\n\t\t\t\t\t<BodyText>Select a Number</BodyText>\r\n\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\tblurOnSubmit\r\n\t\t\t\t\t\tautoCapitalize='none'\r\n\t\t\t\t\t\tautoCorrect={false}\r\n\t\t\t\t\t\tkeyboardType='number-pad'\r\n\t\t\t\t\t\tmaxLength={2}\r\n\t\t\t\t\t\tonChangeText={numberInputHandler}\r\n\t\t\t\t\t\tvalue={enteredValue}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<View style={styles.buttonContainer}>\r\n\t\t\t\t\t\t<View style={styles.button}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttitle='Reset'\r\n\t\t\t\t\t\t\t\tonPress={resetInputHandler}\r\n\t\t\t\t\t\t\t\tcolor={Colors.accent}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<View style={styles.button}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttitle='Confirm'\r\n\t\t\t\t\t\t\t\tonPress={confirmInputHandler}\r\n\t\t\t\t\t\t\t\tcolor={Colors.primary}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Card>\r\n\t\t\t\t{confirmedOutput}\r\n\t\t\t</View>\r\n\t\t</TouchableWithoutFeedback>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tscreen: {\r\n\t\tflex: 1,\r\n\t\tpadding: 10,\r\n\t\talignItems: 'center',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 20,\r\n\t\tmarginVertical: 10,\r\n\t},\r\n\tinputContainer: {\r\n\t\twidth: 300,\r\n\t\tmaxWidth: '80%',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tbuttonContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\twidth: '100%',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpaddingHorizontal: 15,\r\n\t},\r\n\tbutton: {\r\n\t\twidth: 100,\r\n\t},\r\n\tinput: {\r\n\t\twidth: 50,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tsummaryContainer: {\r\n\t\tmarginTop: 20,\r\n\t\talignItems: 'center',\r\n\t},\r\n});\r\n\r\nexport default StartGameScreen;\r\n"]},"metadata":{},"sourceType":"module"}